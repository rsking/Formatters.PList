<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net7.0;net6.0;net5.0;netstandard2.1;netstandard2.0</TargetFrameworks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Authors>Ross King</Authors>
    <Description>PList formatters based on IFormatter and IXmlSerializable</Description>
    <PackageTags>PList;IFormatter;IXmlSerializable</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/rsking/Formatters.PList</PackageProjectUrl>
    <AllowUnsafeBlocks Condition=" ($([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard') or ($([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETCoreApp' and $([MSBuild]::VersionLessThan($([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')), '6.0'))) ">true</AllowUnsafeBlocks>
    <NoWarn Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net8.0'))">$(NoWarn);SYSLIB0011;SYSLIB0050</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <Deterministic>true</Deterministic>
    <DebugSymbols>true</DebugSymbols>
    <_IncludePdb>true</_IncludePdb>
  </PropertyGroup>

  <ItemGroup>
    <Compile Update="PListBinaryFormatter.*.cs" DependentUpon="PListBinaryFormatter.cs" />
    <Compile Update="PList.*.cs" DependentUpon="PList.cs" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="System.Xml" />
  </ItemGroup>

  <ItemGroup Condition=" $([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETStandard' and $([MSBuild]::VersionLessThan($([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')), '2.1')) ">
    <PackageReference Include="PolySharp" PrivateAssets="all" />
    <PackageReference Include="System.Memory" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.XmlSerializer.Generator" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.XmlSerializer.Generator" Version="$(VerMicrosoft_XmlSerializer_Generator)" />
  </ItemGroup>

  <Target Name="_CopySerializationPdb" AfterTargets="GenerateSerializationAssembly" Condition="Exists('$(_SerializerPdbIntermediateFolder)') == 'true'">
    <Copy Condition="Exists('$(_SerializerDllIntermediateFolder)') == 'true'" SourceFiles="$(_SerializerPdbIntermediateFolder)" DestinationFolder="$(OutputPath)" />
  </Target>

  <Target Name="_PackSerializationPdb" BeforeTargets="_GetPackageFiles" Condition=" '$(_IncludePdb)' == 'true' ">

    <PropertyGroup>
      <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    </PropertyGroup>

    <ItemGroup>
      <_BuildOutputInPackage Include="$(ProjectDir)$(OutputPath)%(_TargetFrameworks.Identity)\$(AssemblyName).XmlSerializers.pdb" Condition="Exists('$(ProjectDir)$(OutputPath)%(_TargetFrameworks.Identity)\$(AssemblyName).XmlSerializers.pdb')">
        <TargetFramework>%(_TargetFrameworks.Identity)</TargetFramework>
        <FinalOutputPath>$(ProjectDir)$(OutputPath)%(_TargetFrameworks.Identity)\$(AssemblyName).XmlSerializers.pdb</FinalOutputPath>
      </_BuildOutputInPackage>
    </ItemGroup>

  </Target>

</Project>
